// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

type AliasListEntry struct {
	AliasARN    *string `json:"aliasARN,omitempty"`
	AliasName   *string `json:"aliasName,omitempty"`
	TargetKeyID *string `json:"targetKeyID,omitempty"`
}

type CustomKeyStoresListEntry struct {
	CloudHsmClusterID      *string      `json:"cloudHsmClusterID,omitempty"`
	ConnectionErrorCode    *string      `json:"connectionErrorCode,omitempty"`
	ConnectionState        *string      `json:"connectionState,omitempty"`
	CreationDate           *metav1.Time `json:"creationDate,omitempty"`
	CustomKeyStoreID       *string      `json:"customKeyStoreID,omitempty"`
	CustomKeyStoreName     *string      `json:"customKeyStoreName,omitempty"`
	TrustAnchorCertificate *string      `json:"trustAnchorCertificate,omitempty"`
}

type GrantConstraints struct {
	EncryptionContextEquals map[string]*string `json:"encryptionContextEquals,omitempty"`
	EncryptionContextSubset map[string]*string `json:"encryptionContextSubset,omitempty"`
}

type GrantListEntry struct {
	Constraints       *GrantConstraints `json:"constraints,omitempty"`
	CreationDate      *metav1.Time      `json:"creationDate,omitempty"`
	GrantID           *string           `json:"grantID,omitempty"`
	GranteePrincipal  *string           `json:"granteePrincipal,omitempty"`
	IssuingAccount    *string           `json:"issuingAccount,omitempty"`
	KeyID             *string           `json:"keyID,omitempty"`
	Name              *string           `json:"name,omitempty"`
	Operations        []*string         `json:"operations,omitempty"`
	RetiringPrincipal *string           `json:"retiringPrincipal,omitempty"`
}

type KeyListEntry struct {
	KeyARN *string `json:"keyARN,omitempty"`
	KeyID  *string `json:"keyID,omitempty"`
}

type KeyMetadata struct {
	AWSAccountID          *string      `json:"awsAccountID,omitempty"`
	ARN                   *string      `json:"arn,omitempty"`
	CloudHsmClusterID     *string      `json:"cloudHsmClusterID,omitempty"`
	CreationDate          *metav1.Time `json:"creationDate,omitempty"`
	CustomKeyStoreID      *string      `json:"customKeyStoreID,omitempty"`
	CustomerMasterKeySpec *string      `json:"customerMasterKeySpec,omitempty"`
	DeletionDate          *metav1.Time `json:"deletionDate,omitempty"`
	Description           *string      `json:"description,omitempty"`
	Enabled               *bool        `json:"enabled,omitempty"`
	EncryptionAlgorithms  []*string    `json:"encryptionAlgorithms,omitempty"`
	ExpirationModel       *string      `json:"expirationModel,omitempty"`
	KeyID                 *string      `json:"keyID,omitempty"`
	KeyManager            *string      `json:"keyManager,omitempty"`
	KeyState              *string      `json:"keyState,omitempty"`
	KeyUsage              *string      `json:"keyUsage,omitempty"`
	Origin                *string      `json:"origin,omitempty"`
	SigningAlgorithms     []*string    `json:"signingAlgorithms,omitempty"`
	ValidTo               *metav1.Time `json:"validTo,omitempty"`
}

type Tag struct {
	TagKey   *string `json:"tagKey,omitempty"`
	TagValue *string `json:"tagValue,omitempty"`
}
