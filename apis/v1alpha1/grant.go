// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws/aws-controllers-k8s/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// GrantSpec defines the desired state of Grant
type GrantSpec struct {
	Constraints *GrantConstraints `json:"constraints,omitempty"`
	GrantTokens []*string         `json:"grantTokens,omitempty"`
	// +kubebuilder:validation:Required
	GranteePrincipal *string `json:"granteePrincipal"`
	// +kubebuilder:validation:Required
	KeyID *string `json:"keyID"`
	Name  *string `json:"name,omitempty"`
	// +kubebuilder:validation:Required
	Operations        []*string `json:"operations"`
	RetiringPrincipal *string   `json:"retiringPrincipal,omitempty"`
}

// GrantStatus defines the observed state of Grant
type GrantStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	GrantID    *string                  `json:"grantID,omitempty"`
	GrantToken *string                  `json:"grantToken,omitempty"`
}

// Grant is the Schema for the Grants API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type Grant struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              GrantSpec   `json:"spec,omitempty"`
	Status            GrantStatus `json:"status,omitempty"`
}

// GrantList contains a list of Grant
// +kubebuilder:object:root=true
type GrantList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Grant `json:"items"`
}

func init() {
	SchemeBuilder.Register(&Grant{}, &GrantList{})
}
